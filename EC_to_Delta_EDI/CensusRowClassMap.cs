// <copyright file="CensusRowClassMap.cs" company="PlaceholderCompany">
// Copyright (c) PlaceholderCompany. All rights reserved.
// </copyright>

using CsvHelper.Configuration;

public class CensusRowClassMap : ClassMap<CensusRow> {
    public CensusRowClassMap() {
        this.Map(m => m.Changes).Name("Changes");
        this.Map(m => m.CompanyName).Name("CompanyName");
        this.Map(m => m.EID).Name("EID");
        this.Map(m => m.Location).Name("Location");
        this.Map(m => m.FirstName).Name("FirstName");
        this.Map(m => m.MiddleName).Name("MiddleName");
        this.Map(m => m.LastName).Name("LastName");
        this.Map(m => m.Relationship).Name("Relationship");
        this.Map(m => m.RelationshipCode).Name("RelationshipCode");
        this.Map(m => m.SSN).Name("SSN");
        this.Map(m => m.Gender).Name("Gender");
        this.Map(m => m.BirthDate).Name("BirthDate");
        this.Map(m => m.Race).Name("Race");
        this.Map(m => m.Citizenship).Name("Citizenship");
        this.Map(m => m.Address1).Name("Address1");
        this.Map(m => m.Address2).Name("Address2");
        this.Map(m => m.City).Name("City");
        this.Map(m => m.State).Name("State");
        this.Map(m => m.Zip).Name("Zip");
        this.Map(m => m.County).Name("County");
        this.Map(m => m.Country).Name("Country");
        this.Map(m => m.PersonalPhone).Name("PersonalPhone");
        this.Map(m => m.WorkPhone).Name("WorkPhone");
        this.Map(m => m.MobilePhone).Name("MobilePhone");
        this.Map(m => m.Email).Name("Email");
        this.Map(m => m.PersonalEmail).Name("PersonalEmail");
        this.Map(m => m.EmployeeType).Name("EmployeeType");
        this.Map(m => m.EmployeeStatus).Name("EmployeeStatus");
        this.Map(m => m.HireDate).Name("HireDate");
        this.Map(m => m.TerminationDate).Name("TerminationDate");
        this.Map(m => m.Department).Name("Department");
        this.Map(m => m.Division).Name("Division");
        this.Map(m => m.JobClass).Name("JobClass");
        this.Map(m => m.JobTitle).Name("JobTitle");
        //this.Map(m => m.MaritalStatus).Name("MaritalStatus");
        //this.Map(m => m.MaritalDate).Name("MaritalDate");
        //this.Map(m => m.MaritalLocation).Name("MaritalLocation");
        //this.Map(m => m.StudentStatus).Name("StudentStatus");
        //this.Map(m => m.ScheduledHours).Name("ScheduledHours");
        //this.Map(m => m.SickHours).Name("SickHours");
        //this.Map(m => m.PersonalHours).Name("PersonalHours");
        //this.Map(m => m.W2Wages).Name("W2Wages");
        //this.Map(m => m.Compensation).Name("Compensation");
        //this.Map(m => m.CompensationType).Name("CompensationType");
        this.Map(m => m.PayCycle).Name("PayCycle");
        this.Map(m => m.PayPeriods).Name("PayPeriods");
        this.Map(m => m.CostFactor).Name("CostFactor");
        //this.Map(m => m.TobaccoUser).Name("TobaccoUser");
        //this.Map(m => m.Disabled).Name("Disabled");
        //this.Map(m => m.MedicareADate).Name("MedicareADate");
        //this.Map(m => m.MedicareBDate).Name("MedicareBDate");
        //this.Map(m => m.MedicareCDate).Name("Medicare C Date");
        //this.Map(m => m.MedicareDDate).Name("Medicare D Date");
        //this.Map(m => m.MedicalPCPName).Name("Medical PCP Name");
        //this.Map(m => m.MedicalPCPID).Name("Medical PCP ID");
        //this.Map(m => m.DentalPCPName).Name("Dental PCP Name");
        //this.Map(m => m.DentalPCPID).Name("Dental PCP ID");
        //this.Map(m => m.IPANumber).Name("IPA Number");
        //this.Map(m => m.OBGYN).Name("OBGYN");
        //this.Map(m => m.BenefitEligibleDate).Name("Benefit Eligible Date");
        //this.Map(m => m.UnlockEnrollmentDate).Name("Unlock Enrollment Date");
        //this.Map(m => m.OriginalEffectiveDateInfo).Name("Original Effective Date Info");
        //this.Map(m => m.SubscriberKey).Name("Subscriber Key");
        this.Map(m => m.PlanType).Name("PlanType");
        this.Map(m => m.PlanEffectiveStartDate).Name("PlanEffectiveStartDate");
        this.Map(m => m.PlanEffectiveEndDate).Name("PlanEffectiveEndDate");
        this.Map(m => m.PlanAdminName).Name("PlanAdminName");
        this.Map(m => m.PlanDisplayName).Name("PlanDisplayName");
        //this.Map(m => m.PlanImportID).Name("Plan Import ID");
        this.Map(m => m.EffectiveDate).Name("EffectiveDate");
        this.Map(m => m.CoverageDetails).Name("CoverageDetails");
        this.Map(m => m.ElectionStatus).Name("ElectionStatus");
        //this.Map(m => m.RiderCodes).Name("Rider Codes");
        //this.Map(m => m.Action).Name("Action");
        //this.Map(m => m.WaiveReason).Name("Waive Reason");
        //this.Map(m => m.PolicyNumber).Name("Policy Number");
        //this.Map(m => m.SubgroupNumber).Name("Subgroup Number");
        //this.Map(m => m.AgeDetermination).Name("Age Determination");
        //this.Map(m => m.Carrier).Name("Carrier");
        //this.Map(m => m.TotalRate).Name("Total Rate");
        //this.Map(m => m.EmployeeRate).Name("Employee Rate");
        //this.Map(m => m.SpouseRate).Name("Spouse Rate");
        //this.Map(m => m.ChildrenRate).Name("Children Rate");
        //this.Map(m => m.EmployeeContribution).Name("Employee Contribution");
        //this.Map(m => m.EmployeePre_TaxCost).Name("Employee Pre-Tax Cost");
        //this.Map(m => m.EmployeePost_TaxCost).Name("Employee Post-Tax Cost");
        //this.Map(m => m.EmployeeCostPerDeductionPeriod).Name("Employee Cost Per Deduction Period");
        //this.Map(m => m.PlanDeductionCycle).Name("Plan Deduction Cycle");
        //this.Map(m => m.LastModifiedDate).Name("Last Modified Date");
        //this.Map(m => m.LastModifiedBy).Name("Last Modified By");
        //this.Map(m => m.E_SignDate).Name("E-Sign Date");
        //this.Map(m => m.CalPERS_ID).Name("CalPERS ID");
        //this.Map(m => m.NewBusiness).Name("New Business");
        //this.Map(m => m.Add).Name("Add");
        //this.Map(m => m.Drop).Name("Drop");
        // Map(m => m.EnrolledBy).Name("Enrolled By");
        // Map(m => m.NewBusiness).Name("New Business");
    }
}
